{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhond\\\\Documents\\\\sample\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAlert(\"\"); // Clear any previous alerts\n\n    if (!newPassword || !confirmPassword) {\n      setAlert(\"Please fill in both password fields.\");\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      setAlert(\"Passwords do not match.\");\n      return;\n    }\n    const resetToken = searchParams.get(\"token\"); // Get the token from URL\n\n    if (!resetToken) {\n      setAlert(\"Invalid or missing reset token.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          resetToken,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setAlert(\"Password successfully reset!\");\n        setTimeout(() => {\n          navigate(\"/login\"); // Redirect to login after success\n        }, 2000);\n      } else {\n        setAlert(data.message || \"Failed to reset password.\");\n      }\n    } catch (error) {\n      setAlert(\"Error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), alert && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alert\",\n      className: alert.includes(\"successfully\") ? \"success\" : \"error\",\n      children: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"i/3traQ2XrudT5pYN8WneqSyvyc=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","alert","setAlert","navigate","searchParams","handleSubmit","e","preventDefault","resetToken","get","response","fetch","method","headers","body","JSON","stringify","data","json","success","setTimeout","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","id","includes","_c","$RefreshReg$"],"sources":["C:/Users/jhond/Documents/sample/client/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [alert, setAlert] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setAlert(\"\"); // Clear any previous alerts\r\n\r\n    if (!newPassword || !confirmPassword) {\r\n      setAlert(\"Please fill in both password fields.\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setAlert(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    const resetToken = searchParams.get(\"token\"); // Get the token from URL\r\n\r\n    if (!resetToken) {\r\n      setAlert(\"Invalid or missing reset token.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/auth/reset-password\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ resetToken, newPassword }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setAlert(\"Password successfully reset!\");\r\n        setTimeout(() => {\r\n          navigate(\"/login\"); // Redirect to login after success\r\n        }, 2000);\r\n      } else {\r\n        setAlert(data.message || \"Failed to reset password.\");\r\n      }\r\n    } catch (error) {\r\n      setAlert(\"Error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <i className=\"fas fa-lock\"></i>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <i className=\"fas fa-lock\"></i>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      {alert && (\r\n        <div\r\n          id=\"alert\"\r\n          className={alert.includes(\"successfully\") ? \"success\" : \"error\"}\r\n        >\r\n          {alert}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}