{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhond\\\\Documents\\\\sample\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Routes, Navigate, useLocation } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Signup from \"./components/Signup\";\nimport Home from \"./components/pages/Home\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"; // Import ProtectedRoute\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation(); // Use location to capture the current page URL\n\n  // Check token and validate it on app load\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      verifyToken(token); // Verify token if it exists in localStorage\n    } else {\n      setIsAuthenticated(false); // No token, not authenticated\n    }\n  }, []);\n  const verifyToken = async token => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/verify-token\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}` // Send the token to verify\n        }\n      });\n      const data = await response.json();\n      if (response.ok && data.success) {\n        setIsAuthenticated(true); // Token is valid, user is authenticated\n      } else {\n        localStorage.removeItem(\"authToken\"); // Clear token if invalid\n        setIsAuthenticated(false); // Not authenticated\n      }\n    } catch (error) {\n      console.error(\"Token verification failed:\", error);\n      localStorage.removeItem(\"authToken\"); // In case of error, clear token\n      setIsAuthenticated(false); // Not authenticated\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAuthenticated: isAuthenticated,\n          redirectPath: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 68\n        }, this) // Redirect to \"/\" if already authenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: isAuthenticated ? \"/\" : \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"whLl+38E7ub8R5l5bdVAfFlsuKk=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Routes","Navigate","useLocation","Login","ForgotPassword","Signup","Home","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","location","token","localStorage","getItem","verifyToken","response","fetch","method","headers","Authorization","data","json","ok","success","removeItem","error","console","children","path","element","redirectPath","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/jhond/Documents/sample/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Routes, Navigate, useLocation } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport Signup from \"./components/Signup\";\nimport Home from \"./components/pages/Home\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"; // Import ProtectedRoute\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation(); // Use location to capture the current page URL\n\n  // Check token and validate it on app load\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      verifyToken(token); // Verify token if it exists in localStorage\n    } else {\n      setIsAuthenticated(false); // No token, not authenticated\n    }\n  }, []);\n\n  const verifyToken = async (token) => {\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/api/auth/verify-token\",\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`, // Send the token to verify\n          },\n        }\n      );\n\n      const data = await response.json();\n\n      if (response.ok && data.success) {\n        setIsAuthenticated(true); // Token is valid, user is authenticated\n      } else {\n        localStorage.removeItem(\"authToken\"); // Clear token if invalid\n        setIsAuthenticated(false); // Not authenticated\n      }\n    } catch (error) {\n      console.error(\"Token verification failed:\", error);\n      localStorage.removeItem(\"authToken\"); // In case of error, clear token\n      setIsAuthenticated(false); // Not authenticated\n    }\n  };\n\n  return (\n    <div>\n      <Routes>\n        {/* Protected Home route */}\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute\n              isAuthenticated={isAuthenticated}\n              redirectPath=\"/login\"\n            >\n              <Home />\n            </ProtectedRoute>\n          }\n        />\n        {/* Login route */}\n        <Route\n          path=\"/login\"\n          element={isAuthenticated ? <Navigate to=\"/\" replace /> : <Login />} // Redirect to \"/\" if already authenticated\n        />\n        {/* Signup route */}\n        <Route path=\"/signup\" element={<Signup />} />\n        {/* Forgot Password route */}\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        {/* Catch-all for undefined routes */}\n        <Route\n          path=\"*\"\n          element={<Navigate to={isAuthenticated ? \"/\" : \"/login\"} replace />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}