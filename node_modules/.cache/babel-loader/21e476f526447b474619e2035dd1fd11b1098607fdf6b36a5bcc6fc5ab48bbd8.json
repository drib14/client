{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhond\\\\Documents\\\\sample\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport ResetPassword from \"./components/ResetPassword\";\nimport LoadingModal from \"./components/LoadingModal\"; // Import LoadingModal component\nimport Home from \"./components/pages/Home\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"; // Import ProtectedRoute\n\n// Function to check if the user is authenticated (from the backend)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst checkAuth = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5000/api/auth/verify-token\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` // Assuming the token is stored here\n      }\n    });\n    const data = await response.json();\n    return data.success; // If the token is valid, return true\n  } catch (error) {\n    console.error(\"Error verifying token:\", error);\n    return false; // If there's an error (e.g., network issue), assume the user is not authenticated\n  }\n};\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true); // State to control loading modal\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // State to control authentication status\n\n  useEffect(() => {\n    const checkUserAuth = async () => {\n      const isAuth = await checkAuth(); // Call the backend to check authentication status\n      setIsAuthenticated(isAuth); // Update the authentication state based on the response\n      setIsLoading(false); // Hide loading modal once the check is complete\n    };\n    checkUserAuth(); // Check authentication when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(LoadingModal, {\n      isVisible: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAuthenticated: isAuthenticated,\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/reset-password\",\n        element: /*#__PURE__*/_jsxDEV(ResetPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WRXjUPutFw5O39gJHBZtWrpgCxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Login","Signup","ForgotPassword","ResetPassword","LoadingModal","Home","ProtectedRoute","jsxDEV","_jsxDEV","checkAuth","response","fetch","method","headers","Authorization","localStorage","getItem","data","json","success","error","console","App","_s","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","checkUserAuth","isAuth","children","isVisible","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/jhond/Documents/sample/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport ResetPassword from \"./components/ResetPassword\";\nimport LoadingModal from \"./components/LoadingModal\"; // Import LoadingModal component\nimport Home from \"./components/pages/Home\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"; // Import ProtectedRoute\n\n// Function to check if the user is authenticated (from the backend)\nconst checkAuth = async () => {\n  try {\n    const response = await fetch(\n      \"http://localhost:5000/api/auth/verify-token\",\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`, // Assuming the token is stored here\n        },\n      }\n    );\n    const data = await response.json();\n    return data.success; // If the token is valid, return true\n  } catch (error) {\n    console.error(\"Error verifying token:\", error);\n    return false; // If there's an error (e.g., network issue), assume the user is not authenticated\n  }\n};\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true); // State to control loading modal\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // State to control authentication status\n\n  useEffect(() => {\n    const checkUserAuth = async () => {\n      const isAuth = await checkAuth(); // Call the backend to check authentication status\n      setIsAuthenticated(isAuth); // Update the authentication state based on the response\n      setIsLoading(false); // Hide loading modal once the check is complete\n    };\n\n    checkUserAuth(); // Check authentication when the component mounts\n  }, []);\n\n  return (\n    <Router>\n      {/* Show the LoadingModal while loading */}\n      <LoadingModal isVisible={isLoading} />\n\n      <Routes>\n        {/* Wrap protected routes with ProtectedRoute */}\n        <Route\n          path=\"/\"\n          element={\n            <ProtectedRoute isAuthenticated={isAuthenticated}>\n              <Home />\n            </ProtectedRoute>\n          }\n        />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}