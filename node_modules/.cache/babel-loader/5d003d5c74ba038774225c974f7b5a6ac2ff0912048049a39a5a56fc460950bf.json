{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhond\\\\Documents\\\\sample\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAuthenticated,\n  redirectPath = \"/login\",\n  children\n}) => {\n  _s();\n  const location = useLocation(); // Capture the current location\n\n  if (!isAuthenticated) {\n    // Redirect to login page with 'state' for the current location\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render children if authenticated\n  return children;\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","isAuthenticated","redirectPath","children","_s","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jhond/Documents/sample/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({\r\n  isAuthenticated,\r\n  redirectPath = \"/login\",\r\n  children,\r\n}) => {\r\n  const location = useLocation(); // Capture the current location\r\n\r\n  if (!isAuthenticated) {\r\n    // Redirect to login page with 'state' for the current location\r\n    return <Navigate to={redirectPath} state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Render children if authenticated\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAC;EACtBC,eAAe;EACfC,YAAY,GAAG,QAAQ;EACvBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,IAAI,CAACI,eAAe,EAAE;IACpB;IACA,oBAAOF,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAEJ,YAAa;MAACK,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAACC,EAAA,CAdIJ,cAAc;EAAA,QAKDH,WAAW;AAAA;AAAAiB,EAAA,GALxBd,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}